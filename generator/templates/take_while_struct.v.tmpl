pub struct IterOut {
	predicate fn (_ TypeIn) bool
mut:
	iterator IterIn
	done bool
}

pub fn (mut i IterOut) next() ?TypeIn {
	if i.done {
		return none
	}
	item := i.iterator.next() ?
	if !i.predicate(item) {
		i.done = true
		return none
	}
	return item
}

pub fn (i IterOut) str() string {
	return 'take_while'
}
